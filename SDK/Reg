local Reg = {}
Reg.GC = {}
Reg.LuaReg = {}
Reg.env = {}

function Reg.GC:GetFunctionWithScript(scr)
	local found = {}
	for _,v in next, getgc() do
		if typeof(v) == "function" then
			if getfenv(v).script == scr then
				found[getinfo(v).name] = v
			end
		end
	end
	return found
end

function Reg.GC:DeepSearchFunc(scr)
	local found = {}
	for _,v in next, getgc() do
		if typeof(v) == "function" then
			if getfenv(v).script == scr then
				found[getinfo(v).name] = v
			end
		elseif typeof(v) == "table" then
			for _,k in pairs(v) do
				if typeof(k) == "function" then
					if getfenv(k).script == scr then
						found[getinfo(k).name] = v
					end
				end
			end
		end
	end
	return found
end

Reg.env.Players = game:GetService("Players")
Reg.env.RepS = game:GetService("ReplicatedStorage")
Reg.env.RunS = game:GetService("RunService")
Reg.env.RepF = game:GetService("ReplicatedFirst")
Reg.env.Light = game:GetService("Lighting")
Reg.env.GetS = {__index=function(self,v)
	return game:GetService(v) or game:FindService(v)
end}
Reg.env.Plr = Reg.env.Players.LocalPlayer

for i,v in pairs(Reg.env) do
	getgenv()[i] = v
end
Reg.env = nil

getgenv().regSDK = Reg
